{"version":3,"sources":["assets/img/logo.svg","services/firebaseService.js","components/Notifications.jsx","components/NavBar.jsx","components/Footer.jsx","pages/HomePage.jsx","services/aiService.js","assets/img/x.svg","assets/img/o.svg","components/Square.jsx","components/Board.jsx","pages/AiGame.jsx","components/ChatMessage.jsx","components/Chat.jsx","components/Login.jsx","components/CurrentPlayerPreview.jsx","components/SocialButtons.jsx","pages/Multiplayer.jsx","pages/About.jsx","components/RoomList.jsx","pages/Rooms.jsx","App.js","index.js","services/utilService.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","Notifications","user","useState","rooms","setRooms","roomsRef","collection","anchorEl","setAnchorEl","open","Boolean","handleClose","roomsToNotify","setRoomsToNotify","useEffect","roomsToUpdate","forEach","room","game","turnUser","uid","player2","push","orderBy","onSnapshot","snapshots","_snapshotToArray","docs","reverse","returnArr","childSnapshot","item","data","id","Button","onClick","event","currentTarget","Badge","badgeContent","length","color","Menu","keepMounted","onClose","TransitionComponent","Fade","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","map","player1","opponent","Divider","variant","MenuItem","className","Avatar","src","photoURL","alt","href","displayName","NavBar","history","useHistory","isDrawerOpen","setIsDrawerOpen","notificationsOpen","setNotificationsOpen","useAuthState","UserMenu","signOut","logo","Footer","target","rel","HomePage","calculateWinner","cells","every","row","cell","scores","X","O","Tie","minimax","isMaximizing","result","bestScore","Infinity","i","j","score","Math","max","min","Square","index","value","handleClick","winner","isUserTurn","disabled","x","o","Board","squares","winnerUser","isAiThinking","winUser","setWinUser","a","fetchWinnerUser","WinnerAnnouncement","YourTurnAnnouncement","square","CircularProgress","size","AiGame","Array","from","fill","setSquares","isLoading","setIsLoading","makeAiMove","aiMoveIndex","move","bestMove","newSquares","setTimeout","ChatMessage","txt","createdAt","isSent","messageClass","moment","fromNow","Chat","roomId","messages","inputValue","setInputValue","isChatOpen","setIsChatOpen","scrollingRef","useRef","roomDoc","doc","current","scrollIntoView","behavior","onSendMesasge","e","preventDefault","get","newRoom","newMessage","makeId","Date","now","userId","update","width","height","viewBox","d","Slide","direction","in","mountOnEnter","unmountOnExit","msg","ref","onSubmit","placeholder","onChange","type","Login","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","callbacks","signInSuccessWithAuthResult","firebaseAuth","CurrentPlayerPreview","currentPlayer","currentSymbol","SocialButtons","shareLink","title","FacebookShareButton","url","quote","FacebookIcon","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","LinkedinShareButton","windowWidth","windowHeight","LinkedinIcon","EmailShareButton","subject","body","EmailIcon","Multiplayer","useParams","isRoomLoading","setIsRoomloading","isUserLoading","setIsUserLoading","onAuthStateChanged","setRoom","waitingForPlayer1","setWaitingForPlayer1","waitingForPlayer2","setWaitingForPlayer2","snapshot","document","visibilityState","addPlayerToRoom","addEventListener","removePlayerFromRoom","removeEventListener","onlineUsers","findIndex","onlineUser","filter","miniUser","WaitingModal","creator","JSON","stringify","onRestart","parse","newTurnUser","About","RoomList","localRooms","goToRoom","onDeleteRoom","deleteRoomId","setDeleteRoomId","JoinButtonInnerText","player1TurnTxt","player2TurnTxt","ConfirmDeleteModal","console","log","roomsCopy","sort","b","nameA","toUpperCase","nameB","sortRoomsBycreatorName","sortRoomsByPlayer2Name","seconds","sortRoomsByTime","Rooms","isRoomsLoading","setIsRoomsloading","delete","FieldValue","serverTimestamp","add","then","docRef","App","component","exact","path","createBrowserHistory","ReactDOM","render","StrictMode","basename","getElementById","module","exports","possible","charAt","floor","random"],"mappings":"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","file":"static/js/main.1b40d4e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5a7511e7.svg\";","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyASxXnbaJUXVhul4jHBW8m-Xq_k9KOx7mM\",\r\n\tauthDomain: \"xo-game-f3a16.firebaseapp.com\",\r\n\tdatabaseURL:\r\n\t\t\"https://xo-game-f3a16-default-rtdb.europe-west1.firebasedatabase.app\",\r\n\tprojectId: \"xo-game-f3a16\",\r\n\tstorageBucket: \"xo-game-f3a16.appspot.com\",\r\n\tmessagingSenderId: \"845770346317\",\r\n\tappId: \"1:845770346317:web:211d6ddd42f8055e3ff104\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst db = firebase.firestore()\r\n\r\nconst auth = firebase.auth()\r\n\r\nexport { db, auth };\r\n","import { Avatar, Badge, Button, Divider, MenuItem } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../services/firebaseService\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nconst Notifications = ({ user }) => {\r\n\r\n    const [rooms, setRooms] = useState([])\r\n    const roomsRef = db.collection('rooms/')\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        user && setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [roomsToNotify, setRoomsToNotify] = useState([])\r\n    useEffect(() => {\r\n        const roomsToUpdate = []\r\n        rooms && rooms.forEach(room => {\r\n            if (room.game.turnUser.uid === user.uid && room.game.player2) {\r\n                roomsToUpdate.push(room)\r\n            }\r\n        })\r\n        setRoomsToNotify(roomsToUpdate)\r\n    }, [rooms])\r\n\r\n    useEffect(() => {\r\n        const fetchRoomsData = () => {\r\n            roomsRef\r\n                .orderBy('createdAt')\r\n                .onSnapshot(snapshots => {\r\n                    setRooms(_snapshotToArray(snapshots.docs).reverse())\r\n                })\r\n        }\r\n        fetchRoomsData()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n    const _snapshotToArray = (snapshots) => {\r\n        const returnArr = [];\r\n        snapshots.forEach(childSnapshot => {\r\n            const item = childSnapshot.data();\r\n            item.id = childSnapshot.id;\r\n            returnArr.push(item);\r\n        });\r\n        return returnArr;\r\n    };\r\n\r\n\r\n    if (rooms && user) return <>\r\n        <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <Badge badgeContent={roomsToNotify.length} color=\"primary\"><NotificationsIcon /></Badge>\r\n        </Button>\r\n        <Menu\r\n            id=\"fade-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted={false}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={Fade}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        // PaperProps={{\r\n        //     style: {\r\n        //       top: '50%',\r\n        //       transform: 'translateX(-30%) translateY(90%)',\r\n        //     }\r\n        //   }}\r\n        >\r\n            {!roomsToNotify.length ? \"No New Notifications\" : \"\"}\r\n            {roomsToNotify.length ? \"It's Your Turn Against\" : \"\"}\r\n            {!!roomsToNotify && roomsToNotify.map(room => {\r\n                const { player2, player1 } = room.game\r\n                const opponent = (player2 && player2.uid === user.uid) ? player1 : player2\r\n                return <div key={room.id}><Divider variant=\"middle\" />\r\n                    <MenuItem onClick={handleClose} className=\"menu-item\">\r\n                        <Avatar src={opponent.photoURL} alt={opponent.photoURL} />\r\n                        <a href={`#/multiplayer/${room.id}`}>{opponent.displayName}</a>\r\n                    </MenuItem></div>\r\n            })}\r\n        </Menu>\r\n    </>\r\n}\r\n\r\nexport default Notifications;","import React, { useEffect, useState } from \"react\";\r\n// import history from \"../history.js\";\r\n\r\n\r\nimport logo from \"../assets/img/logo.svg\";\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { auth } from '../services/firebaseService'\r\nimport Notifications from \"./Notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    let history = useHistory();\r\n\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false)\r\n    const [notificationsOpen, setNotificationsOpen] = useState(false)\r\n\r\n    const [user] = useAuthState(auth)\r\n\r\n    const UserMenu = () => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n        const open = Boolean(anchorEl);\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n        return <>\r\n            <Button\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}>\r\n                {/* <img src={user.photoURL} alt=\"\" /> */}\r\n                <Avatar src={user.photoURL} alt=\"\" />\r\n                {/* {user.displayName} */}\r\n            </Button>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                    auth.signOut()\r\n                    setIsDrawerOpen(false)\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    }\r\n\r\n    return <div className=\"nav-bar-wrap full\"><div className=\"nav-bar flex align-center\">\r\n        {(isDrawerOpen || notificationsOpen) && <div className=\"screen\" onClick={() => {\r\n            setIsDrawerOpen(false)\r\n            // setIsDropDownOpen(false)\r\n            setNotificationsOpen(false)\r\n        }}></div>}\r\n        <Button\r\n            onClick={() => { history.push('/') }}\r\n            className=\"logo\">\r\n            <img src={logo} alt=\"\" />\r\n            <h2>Tic Tac Toe</h2>\r\n        </Button>\r\n        <ul className={`main-nav clean-list flex align-center justify-center ${isDrawerOpen ? 'menu-open' : ''}`}>\r\n            <li className=\"home\">\r\n                <Button\r\n                    onClick={() => {\r\n                        setIsDrawerOpen(false)\r\n                        history.push('/')\r\n                    }}\r\n                ><HomeIcon />Home</Button>\r\n            </li>\r\n            <li className=\"ai\">\r\n                <Button\r\n                    onClick={() => { \r\n                        setIsDrawerOpen(false)\r\n                        history.push('/ai')\r\n                    }}\r\n                ><SportsEsportsIcon />Ai Game</Button>\r\n            </li>\r\n            <li className=\"rooms\">\r\n                <Button\r\n                    onClick={() => {\r\n                        setIsDrawerOpen(false)\r\n                        history.push('/rooms')\r\n                    }}\r\n                ><GroupIcon />Game Rooms</Button>\r\n            </li>\r\n            <li className=\"about\">\r\n                <Button\r\n                    onClick={() => { \r\n                        setIsDrawerOpen(false)\r\n                        history.push('/about')\r\n                    }}\r\n                ><InfoIcon />About</Button>\r\n            </li>\r\n            <li className=\"user\">\r\n                {!user\r\n                    ? <Button>\r\n                        <AccountCircleIcon />Sign In\r\n                    </Button>\r\n                    : <UserMenu />\r\n                }\r\n            </li>\r\n            <li className=\"notifications\">\r\n                {user && <Notifications user={user} />}\r\n            </li>\r\n\r\n        </ul>\r\n        <div className={`nav-icon ${isDrawerOpen ? 'open' : ''}`} onClick={() => setIsDrawerOpen(!isDrawerOpen)}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    </div>\r\n    </div>;\r\n};\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst Footer = () => {\r\n    return <div className=\"footer flex align-center justify-center full\">\r\n        {/* <p> */}\r\n        <CopyrightIcon />\r\n        <p>2021 Designed and developed by Michael Michaeli</p>\r\n        <a href=\"https://github.com/michaelmichaeli/\" target=\"_blank\" rel=\"noreferrer\"><GitHubIcon /></a>\r\n        <a href=\"https://www.linkedin.com/in/michael-michaeli-a620b9b0/\" target=\"_blank\" rel=\"noreferrer\"><LinkedInIcon /></a>\r\n        {/* </p> */}\r\n    </div>;\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n\r\nconst HomePage = () => {\r\n    return <div className=\"home-page flex column align-center justify-center\">\r\n\r\n        <main className=\"flex column align-center justify-center\">\r\n            <h2>Welcome To</h2>\r\n            <h1>Tic Tac Toe</h1>\r\n            <p>Play Against Ai or with Friends In Realtime Multiplayer rooms</p>\r\n\r\n            <section className=\"menu flex column\">\r\n                <a href=\"#/ai\"><SportsEsportsIcon /> Play Against Ai</a>\r\n                <a href=\"#/rooms\"><GroupIcon /> Play With Friends</a>\r\n            </section>\r\n        </main>\r\n\r\n    </div>\r\n};\r\n\r\nexport default HomePage;","export function calculateWinner(cells) {\r\n\tif (!cells) return; // No Cells\r\n\r\n\tif (cells.every((row) => row.every((cell) => !cell))) return; // All Cells Empty\r\n\r\n\t// If Wins return Winner:\r\n\tif (!!cells[0][0] && cells[0][0] === cells[0][1] && cells[0][0] === cells[0][2])\r\n\t\treturn cells[0][0];\r\n\tif (!!cells[1][0] && cells[1][0] === cells[1][1] && cells[1][0] === cells[1][2])\r\n\t\treturn cells[1][0];\r\n\tif (!!cells[2][0] && cells[2][0] === cells[2][1] && cells[2][0] === cells[2][2])\r\n\t\treturn cells[2][0];\r\n\tif (!!cells[0][0] && cells[0][0] === cells[1][0] && cells[0][0] === cells[2][0])\r\n\t\treturn cells[0][0];\r\n\tif (!!cells[0][1] && cells[0][1] === cells[1][1] && cells[0][1] === cells[2][1])\r\n\t\treturn cells[0][1];\r\n\tif (!!cells[0][2] && cells[0][2] === cells[1][2] && cells[0][2] === cells[2][2])\r\n\t\treturn cells[0][2];\r\n\tif (!!cells[0][0] && cells[0][0] === cells[1][1] && cells[0][0] === cells[2][2])\r\n\t\treturn cells[0][0];\r\n\tif (!!cells[0][2] && cells[0][2] === cells[1][1] && cells[0][2] === cells[2][0])\r\n\t\treturn cells[0][2];\r\n\r\n\t// return Tie\r\n\tif (cells.every((row) => row.every((cell) => !!cell))) return \"Tie\";\r\n\t\t\r\n\t// const winningLines = [\r\n\t// \t[[0,0], [0,1], [0,2]],\r\n\t// \t[[1,0], [1,1], [1,2]],\r\n\t// \t[[2,0], [2,1], [2,2]],\r\n\t// \t[[0,0], [1,0], [2,0]],\r\n\t// \t[[0,1], [1,1], [2,1]],\r\n\t// \t[[0,2], [1,2], [2,2]],\r\n\t// \t[[0,0], [1,1], [2,2]],\r\n\t// \t[[0,2], [1,1], [2,0]],\r\n\t// ];\r\n\treturn null;\r\n}\r\n\r\nexport function bestMove(cells) {\r\n\tlet bestScore = -Infinity;\r\n\tlet move;\r\n\tfor (let i = 0; i < 3; i++) {\r\n\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\tif (cells[i][j] === null) {\r\n\t\t\t\tcells[i][j] = \"O\";\r\n\t\t\t\tlet score = minimax(cells, false);\r\n\t\t\t\tcells[i][j] = null;\r\n\t\t\t\tif (score > bestScore) {\r\n\t\t\t\t\tbestScore = score;\r\n\t\t\t\t\tmove = { i, j };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn move;\r\n}\r\n\r\nconst scores = {\r\n\tX: -1,\r\n\tO: 1,\r\n\tTie: 0,\r\n};\r\n\r\nfunction minimax(cells, isMaximizing) {\r\n\tlet result = calculateWinner(cells);\r\n\tif (result !== null) {\r\n\t\tlet score = scores[result];\r\n\t\treturn score;\r\n\t}\r\n\tif (isMaximizing) {\r\n\t\tlet bestScore = -Infinity;\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\tif (cells[i][j] === null) {\r\n\t\t\t\t\tcells[i][j] = \"O\";\r\n\t\t\t\t\tlet score = minimax(cells, false);\r\n\t\t\t\t\tcells[i][j] = null;\r\n\t\t\t\t\tbestScore = Math.max(score, bestScore);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bestScore;\r\n\t} else {\r\n\t\tlet bestScore = Infinity;\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\tif (cells[i][j] === null) {\r\n\t\t\t\t\tcells[i][j] = \"X\";\r\n\t\t\t\t\tlet score = minimax(cells, true);\r\n\t\t\t\t\tcells[i][j] = null;\r\n\t\t\t\t\tbestScore = Math.min(score, bestScore);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bestScore;\r\n\t}\r\n}\r\n","export default __webpack_public_path__ + \"static/media/x.507a0b3a.svg\";","export default __webpack_public_path__ + \"static/media/o.31f7f953.svg\";","import React from \"react\";\r\nimport x from \"../assets/img/x.svg\";\r\nimport o from \"../assets/img/o.svg\";\r\n\r\nconst Square = ({ index, value, handleClick, winner, isUserTurn }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`square ${index.i}-${index.j} ${winner ? \"win\" : \"\"}`}\r\n\t\t\tonClick={() => handleClick(index)}\r\n\t\t\tdisabled={!!value || !isUserTurn}\r\n\t\t>\r\n\t\t\t{value === \"X\" && <img src={x} alt=\"X\" />}\r\n\t\t\t{value === \"O\" && <img src={o} alt=\"O\" />}\r\n\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Square;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Square from \"./Square\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nimport x from \"../assets/img/x.svg\";\r\nimport o from \"../assets/img/o.svg\";\r\n\r\n\r\nconst Board = ({ squares, handleClick, winner, isUserTurn, winnerUser = null, isAiThinking = null }) => {\r\n    const [winUser, setWinUser] = useState(null)\r\n    useEffect(() => {\r\n        const fetchWinnerUser = async () => {\r\n            winnerUser && setWinUser(await winnerUser())\r\n        }\r\n        fetchWinnerUser()\r\n    }, [winnerUser])\r\n\r\n    const WinnerAnnouncement = () => {\r\n        return <div className=\"declaration\">\r\n\r\n            {winner === \"Tie\" && <h1 className=\"winner\">It's a Tie!</h1>}\r\n            {(winner === \"X\" || winner === \"O\") && (\r\n                <div className=\"winner\">\r\n                    <img src={winner === \"X\" ? x : o} alt={winner === \"X\" ? \"X\" : \"O\"} />\r\n                    {!winUser && <h3>Won!</h3>}\r\n                    {winUser && <h3>{winUser.displayName} Won!</h3>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n\r\n    const YourTurnAnnouncement = () => {\r\n        return <div className=\"your-turn\">\r\n            <h1>Your Turn</h1>\r\n        </div>\r\n    }\r\n\r\n    return <div className=\"board-wrapper\">\r\n        <div className={`board ${winner && \"win\"}`}>\r\n            {squares.map((row, i) => {\r\n                return row.map((square, j) => {\r\n                    return <Square\r\n                        key={`${i}-${j}`}\r\n                        index={{ i, j }}\r\n                        value={square}\r\n                        handleClick={handleClick}\r\n                        winner={winner}\r\n                        isUserTurn={isUserTurn}\r\n                    />\r\n                })\r\n            })}\r\n        </div>\r\n        <WinnerAnnouncement />\r\n        {isUserTurn && !winner && <YourTurnAnnouncement />}\r\n        {isAiThinking && <div className=\"loading\"><CircularProgress size=\"200px\" color=\"inherit\"/></div>}\r\n    </div>\r\n};\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport { calculateWinner, bestMove } from \"../services/aiService\";\r\n\r\nimport Board from \"../components/Board\"\r\n\r\n// import restart from \"../assets/img/restart.svg\";\r\n\r\nconst AiGame = () => {\r\n\r\n    const [squares, setSquares] = useState(Array.from(Array(3), () => new Array(3).fill(null)))\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    let winner = calculateWinner(squares);\r\n\r\n    const handleClick = ({ i, j }) => {\r\n        if (winner || squares[i][j] || isLoading) return; // don't do anything if won or occupied or loading\r\n        const newSquares = [...squares]\r\n        newSquares[i][j] = \"X\";\r\n        setSquares(newSquares)\r\n        if (!calculateWinner(squares)) {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                makeAiMove(squares)\r\n                setIsLoading(false);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    const makeAiMove = (cells) => {\r\n        const aiMoveIndex = bestMove(cells);\r\n        cells[aiMoveIndex.i][aiMoveIndex.j] = \"O\";\r\n        setSquares(cells)\r\n    };\r\n\r\n    const onRestart = () => {\r\n\t\tsetSquares(Array.from(Array(3), () => new Array(3).fill(null)));\r\n\t\twinner = null\r\n\t};\r\n\r\n    return <div className=\"ai flex align-center justify-center\">\r\n        <Board\r\n            winner={winner}\r\n            squares={squares}\r\n            handleClick={handleClick}\r\n            isUserTurn={!isLoading}\r\n            isAiThinking={isLoading}\r\n        />\r\n        <button className={`restart  ${winner && \"won\"}`}\r\n            onClick={onRestart}>\r\n            {/* <img src={restart} alt=\"Restart\" /> */}\r\n            <p>Restart</p>\r\n        </button>\r\n    </div>;\r\n};\r\n\r\nexport default AiGame;","import moment from 'moment'\r\nconst ChatMessage = ({ txt, createdAt, isSent, photoURL }) => {\r\n    const messageClass = isSent ? 'sent' : 'received'\r\n\r\n    return <div className={\"wrap flex align-center \" + messageClass}>\r\n        {!isSent && <img src={photoURL} alt=\"avatar\" />}\r\n        <div className={\"message flex between align-center \" + messageClass}>\r\n            <p>{txt}</p>\r\n        </div>\r\n        <span>{moment(createdAt).fromNow()}</span>\r\n    </div>\r\n};\r\n\r\nexport default ChatMessage;","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { db } from '../services/firebaseService'\r\nimport { makeId } from '../services/utilService'\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ChatIcon from '@material-ui/icons/QuestionAnswer';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Chat = ({ roomId, user, messages }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isChatOpen, setIsChatOpen] = useState(false)\r\n\r\n    const scrollingRef = useRef()\r\n\r\n    const roomsRef = db.collection('rooms')\r\n    const roomDoc = roomsRef.doc(roomId)\r\n\r\n    useEffect(() => {\r\n        scrollingRef.current && scrollingRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }, [messages])\r\n\r\n    const onSendMesasge = async (e) => {\r\n        e.preventDefault()\r\n        if (!inputValue) return\r\n\r\n        const room = (await roomDoc.get()).data()\r\n        const newRoom = { ...room }\r\n        const newMessage = {\r\n            id: makeId(),\r\n            txt: inputValue,\r\n            createdAt: Date.now(),\r\n            photoURL: user.photoURL,\r\n            userId: user.uid\r\n        }\r\n        newRoom.messages.push(newMessage)\r\n        await roomDoc.update(newRoom)\r\n\r\n        setInputValue('')\r\n        scrollingRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    if (!user) return null\r\n\r\n    return <>\r\n        <div className=\"chat flex column\">\r\n            <div className=\"header\" onClick={() => {\r\n                setIsChatOpen(!isChatOpen)\r\n                scrollingRef.current && scrollingRef.current.scrollIntoView({ behavior: 'smooth' })\r\n            }}>\r\n                <ChatIcon />\r\n                <p> Room Chat </p>\r\n                <svg className={`arrow ${!isChatOpen && \"upsidedown\"}`} width=\"10px\" height=\"10px\" viewBox=\"0 0 18 10\">\r\n                    <path fill=\"black\" d=\"M1 2.414A1 1 0 012.414 1L8.293 6.88a1 1 0 001.414 0L15.586 1A1 1 0 0117 2.414L9.707 9.707a1 1 0 01-1.414 0L1 2.414z\"></path>\r\n                </svg>\r\n            </div>\r\n            <Slide direction=\"up\" in={isChatOpen} mountOnEnter unmountOnExit>\r\n                <main\r\n                // className={isChatOpen ? \"flex column \" : \"flex column hide\"}\r\n                >\r\n                    {(!messages || !messages.length) && <div className=\"no-messages\">\r\n                        <p>No Messages Yet</p>\r\n                        <p>Let The Trash-Talk Begin</p>\r\n                    </div>}\r\n                    {messages && messages.map(msg => <ChatMessage\r\n                        key={msg.id}\r\n                        txt={msg.txt}\r\n                        createdAt={msg.createdAt}\r\n                        photoURL={msg.photoURL}\r\n                        isSent={user.uid === msg.userId}\r\n                    />)}\r\n                    <div ref={scrollingRef}></div>\r\n                </main>\r\n            </Slide>\r\n            \r\n            <Slide direction=\"up\" in={isChatOpen} mountOnEnter unmountOnExit>\r\n                <form onSubmit={onSendMesasge}\r\n                // className={isChatOpen ? \"flex\" : \"flex hide\"}\r\n                >\r\n                    <input\r\n                        placeholder=\"Aa\"\r\n                        // autoFocus\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)} />\r\n                    <button disabled={!inputValue} type=\"submit\">\r\n                        <SendIcon />\r\n                    </button>\r\n                </form>\r\n            </Slide>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Chat;","import React from 'react'\r\n// import google from '../assets/img/google.png'\r\n\r\nimport firebase from 'firebase/app'\r\n// import { useAuthState } from 'react-firebase-hooks/auth'\r\n// import { auth } from '../services/firebaseService'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nconst Login = () => {\r\n    // const [user] = useAuthState(auth)\r\n\r\n    const uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n        ],\r\n        callbacks: { signInSuccessWithAuthResult: () => false }\r\n    }\r\n\r\n    return <div className=\"login flex column align-center justify-center\">\r\n{/* \r\n        {!user &&\r\n            <> */}\r\n                <h2>Please Sign-In</h2>\r\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n            {/* </>} */}\r\n    </div>\r\n}\r\n\r\nexport default Login;","import x from \"../assets/img/x.svg\";\r\nimport o from \"../assets/img/o.svg\";\r\n\r\nconst CurrentPlayerPreview = ({ currentPlayer, currentSymbol, winner }) => {\r\n    return (\r\n        <div className={`current-player-preview flex between ${winner && \"won\"}`}>\r\n            <div className=\"symbol\">\r\n                <img\r\n                    src={currentSymbol === \"X\" ? x : o}\r\n                    alt={currentSymbol === \"X\" ? \"X\" : \"O\"}\r\n                />\r\n            </div>\r\n            <div className=\"next-player\">\r\n                <p className=\"next-player\">Next Player:</p>\r\n                <p className=\"display-name\">{currentPlayer?.displayName}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrentPlayerPreview","import ShareIcon from '@material-ui/icons/Share';\r\nimport {\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    LinkedinIcon,\r\n    WhatsappIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\n\r\nexport const SocialButtons = ({roomId}) => {\r\n    \r\n    const shareLink = `http://localhost:3000/multiplayer/${roomId}`\r\n    const title = 'Join my game of Tic Tac Toe'\r\n    return <div className=\"share flex align-center wrap\">\r\n                <ShareIcon />\r\n        <p>Invite Your Friends:</p>\r\n        \r\n            <FacebookShareButton\r\n                url={shareLink}\r\n                quote={title}\r\n                className=\"share-button\"\r\n            >\r\n                <FacebookIcon\r\n                    size={\"2rem\"} // You can use rem value isntead of numbers\r\n                    round\r\n                />\r\n            </FacebookShareButton>\r\n\r\n            <TwitterShareButton\r\n                url={shareLink}\r\n                title={title}\r\n                className=\"share-button\"\r\n            >\r\n                <TwitterIcon size={\"2rem\"} round />\r\n            </TwitterShareButton>\r\n\r\n            <WhatsappShareButton\r\n                url={shareLink}\r\n                title={title}\r\n                separator=\": \"\r\n                className=\"share-button\"\r\n            >\r\n                <WhatsappIcon size={\"2rem\"} round />\r\n            </WhatsappShareButton>\r\n\r\n            <LinkedinShareButton\r\n                url={shareLink}\r\n                title={title}\r\n                windowWidth={750}\r\n                windowHeight={600}\r\n                className=\"share-button\"\r\n            >\r\n                <LinkedinIcon size={\"2rem\"} round />\r\n            </LinkedinShareButton>\r\n\r\n            <EmailShareButton\r\n                url={shareLink}\r\n                subject={title}\r\n                body=\"Check out this cool game: \"\r\n                className=\"share-button\"\r\n            >\r\n                <EmailIcon size={\"2rem\"} round />\r\n            </EmailShareButton>\r\n\r\n    </div>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Board from '../components/Board'\r\nimport Chat from '../components/Chat'\r\nimport Login from \"../components/Login\";\r\nimport CurrentPlayerPreview from \"../components/CurrentPlayerPreview\";\r\nimport { SocialButtons } from \"../components/SocialButtons\";\r\n\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { db, auth } from '../services/firebaseService'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\n\r\n\r\nconst Multiplayer = () => {\r\n    const { roomId } = useParams()\r\n\r\n    const [isRoomLoading, setIsRoomloading] = useState(true)\r\n    const [isUserLoading, setIsUserLoading] = useState(true)\r\n\r\n    const [user] = useAuthState(auth)\r\n    auth.onAuthStateChanged(user => setIsUserLoading(false));\r\n\r\n    const [room, setRoom] = useState(null)\r\n\r\n    const [waitingForPlayer1, setWaitingForPlayer1] = useState(false)\r\n    const [waitingForPlayer2, setWaitingForPlayer2] = useState(true)\r\n\r\n    const roomsRef = db.collection('rooms')\r\n    const roomDoc = roomsRef.doc(roomId)\r\n\r\n    // Fetching room data from db\r\n    useEffect(() => {\r\n        const fetchRoomData = () => {\r\n            roomDoc.onSnapshot(snapshot => {\r\n                setRoom(snapshot.data())\r\n                setIsRoomloading(false)\r\n            })\r\n        }\r\n        fetchRoomData()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // REMOVING USER FROM ROOM WHEN LEAVING THE PAGE\r\n    useEffect(() => {\r\n        if (user && room && document.visibilityState !== 'hidden') addPlayerToRoom()\r\n        document.addEventListener('visibilitychange', () => {\r\n            if (user && room) {\r\n                if (document.visibilityState === 'hidden') {\r\n                    removePlayerFromRoom()\r\n                } else {\r\n                    addPlayerToRoom()\r\n                }\r\n            }\r\n        });\r\n        return () => {\r\n            document.removeEventListener('visibilitychange', removePlayerFromRoom)\r\n            document.removeEventListener('visibilitychange', addPlayerToRoom)\r\n        }\r\n    }, [room, user]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // For updating 'Waiting for Player...1 + 2'\r\n    useEffect(() => {\r\n        if (room && room.onlineUsers.length) {\r\n            const { player1, player2, turnUser } = room.game\r\n            setWaitingForPlayer1(player1.uid === turnUser.uid && room.onlineUsers\r\n                .findIndex(onlineUser => onlineUser.uid === player1.uid) === -1)\r\n            player2 && setWaitingForPlayer2(player2.uid === turnUser.uid && room.onlineUsers\r\n                .findIndex(onlineUser => onlineUser.uid === player2.uid) === -1)\r\n        }\r\n    }, [room])\r\n\r\n    const removePlayerFromRoom = async () => {\r\n        const room = (await roomDoc.get()).data()\r\n        room.onlineUsers = room.onlineUsers.filter(onlineUser => onlineUser.uid !== user.uid)\r\n        await roomDoc.update(room)\r\n    }\r\n\r\n    const addPlayerToRoom = async () => {\r\n        const room = (await roomDoc.get()).data()\r\n        if (!room) return\r\n        const miniUser = {\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL\r\n        }\r\n\r\n        if (user.uid !== room.game.player1.uid) {\r\n            if (!room.game.player2) {\r\n                room.game.player2 = miniUser\r\n                // setWaitingForPlayer2(false)\r\n            }\r\n        } else {\r\n            // setWaitingForPlayer1(false)\r\n        }\r\n\r\n        // Make User Online\r\n        if (room.onlineUsers.findIndex(onlineUser => onlineUser.uid === user.uid) < 0) {\r\n            room.onlineUsers.push(miniUser)\r\n        }\r\n\r\n        await roomDoc.update(room)\r\n    }\r\n\r\n    const handleClick = ({ i, j }) => {\r\n        const { squares, turnUser, winner, player1, player2 } = room.game\r\n        const { creator } = room\r\n\r\n        // don't do anything if won or occupied\r\n        if (winner || squares[i][j] === '') {\r\n            return\r\n        };\r\n\r\n        //don't do anything if not yor turn\r\n        if (turnUser.uid !== user.uid) return\r\n\r\n        // check if no 2 players\r\n        if (!player2) {\r\n            // setWaitingForPlayer2(true)\r\n            // USER-MESSAGE: Waiting for P2!\r\n            return\r\n        }\r\n\r\n        // UPDATE SQUARES\r\n        let newSquares = [...JSON.parse(squares)]\r\n        newSquares[i][j] = user.uid === creator.uid ? \"X\" : \"O\";\r\n        // UPDATE TURN-USER\r\n        const newTurnUser = turnUser.uid === room.game.player1.uid\r\n            ? player2\r\n            : player1\r\n\r\n        //  UPDATE ROOM\r\n        const newRoom = { ...room }\r\n        newRoom.game.winner = calculateWinner(newSquares)\r\n        newSquares = JSON.stringify(newSquares)\r\n        newRoom.game.squares = newSquares\r\n        newRoom.game.turnUser = newTurnUser\r\n        roomDoc.update(newRoom)\r\n    }\r\n\r\n    const winnerUser = () => {\r\n        const { winner, player1, player2 } = room.game\r\n        if (!winner || winner === \"Tie\") return null\r\n        if (winner === \"X\") return player1\r\n        return player2\r\n    }\r\n\r\n    const onRestart = () => {\r\n        if (!room.game.winner) return\r\n        if (user.uid !== room.game.player1.uid && user.uid !== room.game.player2.uid) return\r\n        const newRoom = { ...room }\r\n        newRoom.game.winner = null\r\n        newRoom.game.squares = JSON.stringify([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]])\r\n        roomDoc.update(newRoom)\r\n    }\r\n\r\n    const calculateWinner = (cells) => {\r\n        if (!cells) return; // No Cells\r\n        if (cells.every((row) => row.every((cell) => !cell))) return; // All Cells Empty\r\n        // If Wins return Winner symbol:\r\n        if (!!cells[0][0] && cells[0][0] === cells[0][1] && cells[0][0] === cells[0][2])\r\n            return cells[0][0];\r\n        if (!!cells[1][0] && cells[1][0] === cells[1][1] && cells[1][0] === cells[1][2])\r\n            return cells[1][0];\r\n        if (!!cells[2][0] && cells[2][0] === cells[2][1] && cells[2][0] === cells[2][2])\r\n            return cells[2][0];\r\n        if (!!cells[0][0] && cells[0][0] === cells[1][0] && cells[0][0] === cells[2][0])\r\n            return cells[0][0];\r\n        if (!!cells[0][1] && cells[0][1] === cells[1][1] && cells[0][1] === cells[2][1])\r\n            return cells[0][1];\r\n        if (!!cells[0][2] && cells[0][2] === cells[1][2] && cells[0][2] === cells[2][2])\r\n            return cells[0][2];\r\n        if (!!cells[0][0] && cells[0][0] === cells[1][1] && cells[0][0] === cells[2][2])\r\n            return cells[0][0];\r\n        if (!!cells[0][2] && cells[0][2] === cells[1][1] && cells[0][2] === cells[2][0])\r\n            return cells[0][2];\r\n        // If tied return \"Tie\"\r\n        if (cells.every((row) => row.every((cell) => !!cell))) return \"Tie\";\r\n        return null;\r\n    }\r\n\r\n    const WaitingModal = () => {\r\n        const { player1, player2 } = room.game\r\n        if (waitingForPlayer1 && !waitingForPlayer2) return <section className={`waiting flex column align-center`}>\r\n            <CircularProgress color=\"inherit\" />\r\n            <p>Waiting for Player 1 ({player1.displayName}) to come back</p>\r\n        </section>\r\n        if (waitingForPlayer2 && !waitingForPlayer1) return <section className={`waiting flex column align-center`}>\r\n            <CircularProgress color=\"inherit\" />\r\n            <p>Waiting for Player 2 {player2 ? `(${player2.displayName}) to come back` : \" to join the room\"}</p>\r\n        </section>\r\n        // if (waitingForPlayer2 && waitingForPlayer1) return <section className={`waiting flex column align-center`}>\r\n        //     <CircularProgress color=\"inherit\" />\r\n        //     <p>Waiting for both Player 1 ({player1.displayName}) and Player 2 ({player2.displayName}) to come back</p>\r\n        // </section>\r\n    }\r\n\r\n    if (isRoomLoading || isUserLoading) return <div className=\"loader-spinner flex column align-center justify-center\">\r\n        <CircularProgress size=\"100px\" color=\"inherit\" />\r\n    </div>\r\n\r\n    if (!room && !isRoomLoading) return <div className=\"multiplayer flex column align-center justify-center\">\r\n        <div className=\"no-room flex column align-center justify-center\">\r\n            <h2>Oops... Something went wrong</h2>\r\n            <p>Probably an address typo or this room doesn't exist anymore.</p>\r\n            <p>You can create a new game room from the<a href=\"#/rooms\">Rooms-page.</a></p>\r\n        </div>\r\n    </div>\r\n\r\n    if (!user && !isUserLoading) return <Login />\r\n\r\n    if (room && user && !isRoomLoading && !isUserLoading) {\r\n        const { squares, turnUser, winner, player1, player2 } = room.game\r\n        const { messages, creator, onlineUsers } = room\r\n        return <div className=\"multiplayer flex column align-center\">\r\n\r\n            <header className=\"flex between align-center\">\r\n                {turnUser && <CurrentPlayerPreview\r\n                    currentPlayer={turnUser}\r\n                    currentSymbol={turnUser.uid === creator.uid ? \"X\" : \"O\"}\r\n                    winner={winner}\r\n                />}\r\n                <div className=\"middle flex column align-center justify-center\">\r\n                    <h2>{creator.displayName}'s Room</h2>\r\n                </div>\r\n\r\n                {(user.uid === player1.uid || (player2 && user.uid === player2.uid))\r\n                    ? <div className={`restart flex  ${winner && \"won\"}`}\r\n                        onClick={() => onRestart()}>\r\n                        <div className=\"text\">\r\n                            <p>Restart</p>\r\n                        </div>\r\n                        <div className=\"symbol\">\r\n                            <ReplayIcon />\r\n                        </div>\r\n                    </div>\r\n                    : <div className=\"restart-dummy\"></div>\r\n                }\r\n            </header>\r\n\r\n\r\n            <Board\r\n                squares={JSON.parse(squares)}\r\n                handleClick={handleClick}\r\n                winner={winner}\r\n                isUserTurn={turnUser?.uid === user.uid}\r\n                winnerUser={winnerUser}\r\n            />\r\n\r\n            {(waitingForPlayer1 || waitingForPlayer2) && <WaitingModal />}\r\n            {/* <section className={`waiting flex column align-center`}>\r\n                    {(waitingForPlayer1 || waitingForPlayer2) && <CircularProgress color=\"inherit\" />}\r\n                    {waitingForPlayer1 && !waitingForPlayer2 && <p>Waiting for Player 1 ({player1.displayName}) to come back</p>}\r\n                    {waitingForPlayer2 && !waitingForPlayer1 && <p>Waiting for Player 2 {player2 ? `(${player2?.displayName}) to come back` : \" to join the room\"}</p>}\r\n                    {waitingForPlayer2 && waitingForPlayer1 && <p>Waiting for both Player 1 ({player1.displayName}) and Player 2 ({player2?.displayName}) to come back</p>}\r\n                </section> */}\r\n            \r\n            <section className=\"online-players flex align-center wrap\">\r\n                <PublicIcon />\r\n                <p>Online Right Now:</p>\r\n                {onlineUsers.map(onlineUser => <div key={onlineUser.uid} className=\"player flex justify-center align-center\">\r\n                    <img src={onlineUser.photoURL} alt={onlineUser.photoURL} />\r\n                    <p>{onlineUser.displayName[0]}</p>\r\n                </div>)}\r\n            </section>\r\n\r\n            <SocialButtons roomId={roomId} />\r\n\r\n            <Chat messages={messages} roomId={roomId} user={user} />\r\n\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default Multiplayer;","import React from \"react\";\r\n\r\nconst About = () => {\r\n    return <div className=\"about flex align-center justify-center\">\r\n        I Am About\r\n    </div>;\r\n};\r\n\r\nexport default About;","import moment from \"moment\"\r\nimport GamesIcon from '@material-ui/icons/Games';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n// import ConfirmDeleteModal from './ConfirmDeleteModal'\r\n\r\nconst RoomList = ({ localRooms, goToRoom, user, onDeleteRoom }) => {\r\n\r\n    const [rooms, setRooms] = useState(localRooms)  // For Sorting\r\n    useEffect(() => {\r\n        setRooms(localRooms);\r\n    }, [localRooms])\r\n    const sortRoomsBycreatorName = () => {\r\n        const roomsCopy = [...rooms]\r\n        roomsCopy.sort(function (a, b) {\r\n            var nameA = a.creator.displayName.toUpperCase(); // to ignore upper and lowercase\r\n            var nameB = b.creator.displayName.toUpperCase(); // to ignore upper and lowercase\r\n            if (nameA < nameB) return -1;\r\n            if (nameA > nameB) return 1;\r\n            return 0;\r\n        })\r\n        if (roomsCopy.every((room, index) => room.id === rooms[index].id)) {\r\n            roomsCopy.reverse()\r\n        }\r\n        setRooms(roomsCopy)\r\n    }\r\n    const sortRoomsByPlayer2Name = () => {\r\n        const roomsCopy = [...rooms]\r\n        roomsCopy.sort(function (a, b) {\r\n            const nameA = a.game.player2?.displayName.toUpperCase(); // to ignore upper and lowercase\r\n            const nameB = b.game.player2?.displayName.toUpperCase(); // to ignore upper and lowercase\r\n            if (!nameA || !nameB) return -2;\r\n            if (nameA < nameB) return -1;\r\n            if (nameA > nameB) return 1;\r\n            return 0;\r\n        })\r\n        if (roomsCopy.every((room, index) => room.id === rooms[index].id)) {\r\n            roomsCopy.reverse()\r\n        }\r\n        setRooms(roomsCopy)\r\n    }\r\n    const sortRoomsByTime = () => {\r\n        let roomsCopy = [...rooms]\r\n        roomsCopy.sort(function (a, b) {\r\n            return a.createdAt.seconds - b.createdAt.seconds;\r\n        })\r\n        if (roomsCopy.every((room, index) => room.id === rooms[index].id)) {\r\n            roomsCopy.reverse()\r\n        }\r\n        setRooms(roomsCopy)\r\n    }\r\n\r\n    const [deleteRoomId, setDeleteRoomId] = useState(null);\r\n\r\n    const JoinButtonInnerText = ({ room, user }) => {\r\n        const { player1, player2, turnUser } = room.game\r\n        const player1TurnTxt = turnUser.uid === player1.uid ? 'Your Turn' : 'Opponents turn'\r\n        if (player1.uid === user.uid) return <><GamesIcon /><p>{player1TurnTxt}</p></>\r\n        if (!player2) return <><PersonAddIcon /><p>Join</p></>\r\n        const player2TurnTxt = turnUser.uid === player2.uid ? 'Your Turn' : 'Opponents turn'\r\n        if (player2.uid === user.uid) return <><GamesIcon /><p>{player2TurnTxt}</p></>\r\n        return <><VisibilityIcon /><p>Watch</p></>\r\n    }\r\n\r\n    const ConfirmDeleteModal = () => {\r\n        return (\r\n            <div className=\"delete-modal\">\r\n                <p>Are your sure you want to remove this room permanently?</p>\r\n                {/* <DialogActions> */}\r\n                <Button onClick={() => {\r\n                    console.log(deleteRoomId)\r\n                    onDeleteRoom(deleteRoomId)\r\n                    setDeleteRoomId(null);\r\n                }}>Remove</Button>\r\n                <Button onClick={() => setDeleteRoomId(null)}>No</Button>\r\n                {/* </DialogActions> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <>\r\n        {deleteRoomId && <div className=\"screen\" onClick={() => setDeleteRoomId(null)}></div>}\r\n        <section className=\"rooms-list\">\r\n            <header>\r\n                {/* <div></div> */}\r\n                <div className=\"creator\" onClick={() => sortRoomsBycreatorName()}>Player</div>\r\n                <div className=\"player2\" onClick={() => sortRoomsByPlayer2Name()}>Opponent</div>\r\n                <div className=\"time\" onClick={() => sortRoomsByTime()}>Created</div>\r\n                {/* <div>Manage</div> */}\r\n                <div>Enter</div>\r\n            </header>\r\n            <main>\r\n                {rooms.map(room => {\r\n                    return <div className=\"room-row\" key={room.id}>\r\n\r\n                        <div className=\"creator flex align-center\">\r\n                            <img src={room.creator.photoURL} alt={room.creator.photoURL} />\r\n                            {room.creator.uid === user.uid ? \"You\" : room.creator.displayName}\r\n                        </div>\r\n\r\n                        <div className=\"player2 flex align-center\">\r\n                            {room.game.player2 && <img src={room.game.player2.photoURL} alt={room.game.player2.photoURL} />}\r\n                            {(room.game.player2 && room.game.player2.uid === user.uid) && \"You\"}\r\n                            {(room.game.player2 && room.game.player2.uid !== user.uid) && room.game.player2.displayName}\r\n                            {!room.game.player2 && \"Waiting...\"}\r\n                        </div>\r\n\r\n                        {room.createdAt && <div className=\"time flex justify-center align-center\">\r\n                            {moment(room.createdAt.seconds * 1000).fromNow()}\r\n                        </div>}\r\n\r\n                        {user.uid === room.creator.uid\r\n                            ? <button\r\n                                // disabled={room.onlineUsers.length > 0}\r\n                                className=\"trash flex justify-center align-center\"\r\n                                // onClick={()=>onDeleteRoom(room.id)}\r\n                                onClick={() => setDeleteRoomId(room.id)}\r\n                            >\r\n                                <DeleteForeverIcon />\r\n                            </button>\r\n                            : <div className=\"trash\"> </div>}\r\n\r\n                        {/* <div className=\"online flex justify-center align-center\">{room.onlineUsers.length}</div> */}\r\n\r\n                        <a\r\n                            href={`#/multiplayer/${room.id}`}\r\n                            className=\"join flex align-center justify-center\"\r\n                        >\r\n                            <JoinButtonInnerText room={room} user={user} />\r\n                        </a>\r\n                        {/* <ConfirmDeleteModal roomId={room.id} handleDeleteModalClose={handleDeleteModalClose} openDeleteModal={openDeleteModal} /> */}\r\n                    </div>\r\n                })}\r\n            </main>\r\n            {deleteRoomId && <ConfirmDeleteModal />}\r\n\r\n        </section></>\r\n}\r\n\r\nexport default RoomList","import React, { useEffect, useState } from 'react'\r\nimport RoomList from '../components/RoomList'\r\n// import history from '../history'\r\n\r\n\r\nimport firebase from 'firebase'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { db, auth } from \"../services/firebaseService\";\r\nimport Login from '../components/Login';\r\n\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Rooms = () => {\r\n    let history = useHistory();\r\n\r\n    const [isRoomsLoading, setIsRoomsloading] = useState(true)\r\n    const [isUserLoading, setIsUserLoading] = useState(true)\r\n\r\n    const [user] = useAuthState(auth)\r\n    auth.onAuthStateChanged(user => setIsUserLoading(false));\r\n\r\n    const [rooms, setRooms] = useState([])\r\n\r\n    const roomsRef = db.collection('rooms/')\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchRoomsData = () => {\r\n            roomsRef\r\n                .orderBy('createdAt')\r\n                .onSnapshot(snapshots => {\r\n                    setRooms(_snapshotToArray(snapshots.docs).reverse())\r\n                    setIsRoomsloading(false)\r\n                })\r\n        }\r\n        fetchRoomsData()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const _snapshotToArray = (snapshots) => {\r\n        const returnArr = [];\r\n        snapshots.forEach(childSnapshot => {\r\n            const item = childSnapshot.data();\r\n            item.id = childSnapshot.id;\r\n            returnArr.push(item);\r\n        });\r\n\r\n        return returnArr;\r\n    };\r\n    // Maybe: for allowing only one room per user\r\n    // const isAlreadyHaveRoom = () => {\r\n    //     if (rooms) return rooms.findIndex(room => room.creator && room.creator.uid === user.uid) >= 0\r\n    // }\r\n\r\n    const onCreatNewRoom = () => {\r\n        const miniUser = {\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL\r\n        }\r\n        const newRoom = {\r\n            creator: miniUser,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            game: {\r\n                turnUser: miniUser,\r\n                player1: miniUser,\r\n                player2: null,\r\n                squares: JSON.stringify([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]),\r\n                winner: null\r\n            },\r\n            messages: [],\r\n            onlineUsers: []\r\n        }\r\n        roomsRef.add(newRoom)\r\n            .then(docRef => goToRoom(docRef.id))\r\n    }\r\n\r\n    const onDeleteRoom = (roomId) => {\r\n        console.log(roomId);\r\n        roomsRef.doc(roomId).delete()\r\n    }\r\n\r\n    const goToRoom = (roomId) => {\r\n        // const win = window.open(\"/multiplayer/\" + roomId, \"_blank\");\r\n        // win.focus();\r\n        history.push(`/multiplayer/${roomId}`)\r\n    }\r\n\r\n    if (isUserLoading) return <div className=\"loader-spinner flex column align-center justify-center\">\r\n        <CircularProgress size=\"100px\" color=\"inherit\" />\r\n    </div>\r\n\r\n    if (!user && !isUserLoading) return <Login />\r\n\r\n    return <section className=\"rooms-container home-page flex column align-center justify-center\">\r\n        <img className=\"user-photo\" src={user.photoURL} alt={user.photoURL} />\r\n        <h2 className=\"user-name\">{user.displayName}</h2>\r\n\r\n        <div className=\"rooms flex column justify-center align-center between\">\r\n            {!isRoomsLoading && rooms.length > 0 &&\r\n                <RoomList\r\n                    user={user}\r\n                    goToRoom={goToRoom}\r\n                    localRooms={rooms}\r\n                    onDeleteRoom={onDeleteRoom}\r\n                />}\r\n            {!isRoomsLoading && (!rooms || rooms.length === 0) && <div className=\"no-rooms\">\r\n                <p>Looks like all the game rooms expired.</p>\r\n                <p>Create a new room and invite your friends.</p>\r\n            </div>}\r\n            {isRoomsLoading && <div className=\"loader-spinner flex column align-center justify-center\">\r\n                <CircularProgress color=\"inherit\" />\r\n            </div>}\r\n            <button\r\n                onClick={onCreatNewRoom}\r\n            ><GroupAddIcon />Create New Room</button>\r\n        </div>\r\n    </section>\r\n}\r\nexport default Rooms;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport \"./styles/global.scss\";\n\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport HomePage from \"./pages/HomePage\";\nimport AiGame from \"./pages/AiGame\";\nimport Multiplayer from \"./pages/Multiplayer\";\nimport About from \"./pages/About\";\nimport Rooms from \"./pages/Rooms\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App main-container\">\n\t\t\t<NavBar />\n\t\t\t<Switch>\n\t\t\t\t<Route component={HomePage} exact path=\"/\" />\n\t\t\t\t<Route component={About} exact path=\"/about\" />\n\t\t\t\t<Route component={AiGame} exact path=\"/ai\" />\n\t\t\t\t<Route component={Rooms} exact path=\"/rooms\" />\n\t\t\t\t<Route component={Multiplayer} exact path=\"/multiplayer/:roomId?\" />\n\t\t\t</Switch>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\n// import history from \"./history.js\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router basename=\"/xo/\" history={history}>\n\t\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function makeId(length = 6) {\n    var txt = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return txt;\n}\n\nmodule.exports = {\n    makeId\n}"],"sourceRoot":""}